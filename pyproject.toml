[project]
name = "ssb-pypitemplate-instance"
version = "0.3.0"
description = "SSB Pypitemplate Instance"
authors = [{ name = "Arne SÃ¸rli", email = "arne.sorli@ssb.no" }]
maintainers = [{ name = "Statistics Norway, IT-partner Department (703)" }]
license = "MIT"
readme = "README.md"
requires-python = ">=3.10,<4.0"
classifiers = [
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "License :: OSI Approved :: MIT License",
  "Development Status :: 4 - Beta",
  "Typing :: Typed",
]
dependencies = [
    "click>=8.0.1",
]

[project.urls]
homepage = "https://github.com/statisticsnorway/ssb-pypitemplate-instance"
repository = "https://github.com/statisticsnorway/ssb-pypitemplate-instance"
documentation = "https://statisticsnorway.github.io/ssb-pypitemplate-instance"
Changelog = "https://github.com/statisticsnorway/ssb-pypitemplate-instance/releases"

[project.scripts]
ssb-pypitemplate-instance = "ssb_pypitemplate_instance.__main__:main"

[dependency-groups]
dev = [
    "pygments>=2.10.0",
    "black[jupyter]>=23.1.0",
    "coverage[toml]>=6.2",
    "darglint>=1.8.1",
    "furo>=2021.11.12",
    "mypy>=0.930",
    "pre-commit>=2.16.0",
    "pre-commit-hooks>=4.1.0",
    "ruff>=0.0.284",
    "pytest>=6.2.5",
    "sphinx>=6.2.1",
    "sphinx-autobuild>=2021.3.14",
    "sphinx-autodoc-typehints>=1.24.0",
    "sphinx-click>=3.0.2",
    "typeguard>=2.13.3",
    "xdoctest[colors]>=0.15.10",
    "myst-parser>=0.16.1",
    "deptry>=0.23.0",
]

[tool.pytest.ini_options]
pythonpath = ["src"]

[tool.coverage.paths]
source = ["src", "*/site-packages"]
tests = ["tests", "*/tests"]

[tool.coverage.run]
branch = true
source = ["ssb_pypitemplate_instance", "tests"]
relative_files = true

[tool.coverage.report]
show_missing = true
fail_under = 80

[tool.deptry.per_rule_ignores]
DEP001 = ["nox"]  # packages available by default

[tool.mypy]
strict = true
warn_unreachable = true
pretty = true
show_column_numbers = true
show_error_context = true

[tool.ruff]
force-exclude = true  # Apply excludes to pre-commit
show-fixes = true
src = ["src", "tests"]
target-version = "py311"  # Minimum Python version supported
include = ["*.py", "*.pyi", "**/pyproject.toml", "*.ipynb"]
extend-exclude = [
    "__pycache__",
    "old",
    ".ipynb_checkpoints",
    "noxfile.py",
    "docs/conf.py",
]

# Ruff rules may be customized as desired: https://docs.astral.sh/ruff/rules/
[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "ANN202", # Don't require return type annotation for private functions.
    "ANN401", # Allow type annotation with type Any.
    "D100",   # Supress undocumented-public-module. Only doc of public api required.
    "FBT001", # Allow boolean positional arguments in a function.
    "FBT002", # Allow boolean default positional arguments in a function.
    "E402",   # Supress module-import-not-at-top-of-file, needed in jupyter notebooks.
    "E501",   # Supress line-too-long warnings: trust black's judgement on this one.
    "PLR2004", # Allow to compare with unnamed numerical constants.
]

[tool.ruff.lint.isort]
force-single-line = true

[tool.ruff.lint.mccabe]
max-complexity = 15

[tool.ruff.lint.pydocstyle]
convention = "google"  # You can also use "numpy".

[tool.ruff.lint.pylint]
max-args = 8

[tool.ruff.lint.pep8-naming]
classmethod-decorators = ["classmethod", "validator", "root_validator", "pydantic.validator"]

[tool.ruff.lint.per-file-ignores]
"*/__init__.py" = ["F401"]
"**/tests/*" = [
    "ANN001",  # type annotations don't add value for test functions
    "ANN002",  # type annotations don't add value for test functions
    "ANN003",  # type annotations don't add value for test functions
    "ANN201",  # type annotations don't add value for test functions
    "ANN204",  # type annotations don't add value for test functions
    "ANN205",  # type annotations don't add value for test functions
    "ANN206",  # type annotations don't add value for test functions
    "D100",    # docstrings are overkill for test functions
    "D101",
    "D102",
    "D103",
    "S101",    # asserts are encouraged in pytest
]

[build-system]
requires = ["uv_build>=0.8.0,<0.9"]
build-backend = "uv_build"
